
@{
	ViewBag.Title = "Index";
}
<div class="jumbotron">
	<h1>Fiilis-kirjaukset</h1>
	<p class="lead">
		Kirjaa päivän fiilis.
	</p>
	@*<p><a href="~/Home/Palautteet" class="btn btn-primary btn-lg">Lue palautteita  &raquo;</a></p>*@ @*<-- jumbotronin button, tarvitaanko?*@
</div>

<div id="calender"></div>

<!-- Tapahtumatiedon näyttöikkuna modal-->
<div id="myModalDisplayEvent" class="modal fade" role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">

				<button type="button" class="close" data-dismiss="modal">&times;</button>
				<h4 class="modal-title"><span id="eventTitle"></span></h4>
			</div>

			<div class="modal-body">

				<button id="btnDelete" class="btn btn-danger btn-sm pull-right">
					<span class="glyphicon glyphicon-remove"></span> Poista
				</button>

				<button id="btnEdit" class="btn btn-info btn-sm pull-right" style="margin-right:5px;">
					<span class="glyphicon glyphicon-pencil"></span> Muokkaa
				</button>

				<p id="pDetails"></p>

			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Sulje</button>
			</div>
		</div>
	</div>
</div>

<!-- Muokkausikkuna modal-->
<div id="myModalSaveEvent" class="modal fade" role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal">&times;</button>
				<h4 class="modal-title">Tapahtuman muokkaus ja tallennus</h4>
			</div>
			<div class="modal-body">
				<form class="form-horizontal" style="margin-left:20px;">
					@*marginaalia lomakkeen kenttien eteen vasemmalle*@
					<input type="hidden" id="hdEventID" value="0" />
					<div class="form-group">
						<label>Subject</label>
						<input type="text" id="txtSubject" class="form-control" />
					</div>
					<div class="form-group">
						<label>Alkaa</label>
						<div class="input-group date" id="dtp1">
							<input type="text" id="txtStart" class="form-control" />
							<span class="input-group-addon">
								<span class="glyphicon glyphicon-calendar"></span>
							</span>
						</div>
					</div>
					<div class="form-group">
						<div class="checkbox">
							<label><input type="checkbox" id="chkIsFullDay" checked="checked" />  Kokopäivä</label>
						</div>
					</div>
					<div class="form-group" id="divEndDate" style="display:none">
						<label>End</label>
						<div class="input-group date" id="dtp2">
							<input type="text" id="txtEnd" class="form-control" />
							<span class="input-group-addon">
								<span class="glyphicon glyphicon-calendar"></span>
							</span>
						</div>
					</div>
					<div class="form-group">
						<label>Kuvaus</label>
						<textarea id="txtDescription" rows="3" class="form-control"></textarea>
					</div>
					<div class="form-group">
						<label>Väriteema</label>
						<select id="ddThemeColor" class="form-control">
							<option value="">Oletus</option>
							<option value="red">Punainen</option>
							<option value="blue">Sininen</option>
							<option value="black">Musta</option>
							<option value="green">Vihreä</option>
						</select>
					</div>
					<button type="button" id="btnSave" class="btn btn-success">Tallenna</button>
					<button type="button" class="btn btn-default" data-dismiss="modal">Sulje</button>
				</form>
			</div>
		</div>
	</div>
</div>

@section Scripts{
	
	<script>// Ajetaan kun sivu on latautunut selaimeen
    $(document).ready(function () {
        var events = [];
        var selectedEvent = null;
        FetchEventAndRenderCalendar();

        function FetchEventAndRenderCalendar() {
            events = [];
            $.ajax({
                type: "GET",
                //Controllerin metodin osoite:
                //url: "https://localhost:44308/Event/GetEvents",
                url: "/Event/GetEvents",
                success: function (data) {
                    $.each(data, function (turha, data) { // 1. parametri tulee muttei käytetä
                        events.push({
                            // Ao. title, description, color, start, stop, allDay ovat full calendarin tunnistamia sanoja,
                            //kun taas asetettava arvo data.jotain on se ominaisuuden nimi mikä tulee tietokannan perusteella.
                            title: data.Subject,
                            description: data.Description,
                            start: moment(data.Start),
                            end: data.End != null ? moment(data.End) : null,
                            color: data.ThemeColor,
                            allDay: data.IsFullDay,
                            EVENT_ID: data.EventID  /*lisätty EVENT_ID, jotta voisi käyttää kummankin eventin kohdistukseen / esim poistoissa*/
                        });
                    })

                    GenerateCalender(events);
                },
                error: function (error) {
                    alert('Jokin meni pieleen');
                }
            })
        }

        function GenerateCalender(events) {
            //Perusdebuggaus haetulle datalle consoleen!
            console.log(events);
            // Alustus
            $('#calender').fullCalendar('destroy');

            /* Tässä määritellään itse kalenteri asetuksineen. Mallina runsaasti määrityksiä
                esimerkin vuoksi Suomalaiseen käyttöön. */
            $('#calender').fullCalendar({
                contentHeight: 400,
                defaultDate: new Date(),
                timeFormat: 'hh:mm',
                header: {
                    left: 'prevYear, nextYear, today',
                    center: 'prev, title, next',
                    right: 'month,basicWeek,basicDay,agenda'
                },
                monthNames: ['Tammikuu', 'Helmikuu', 'Maaliskuu', 'Huhtikuu', 'Toukokuu', 'Kesäkuu', 'Heinäkuu', 'Elokuu', 'Syyskuu', 'Lokakuu', 'Marraskuu', 'Joulukuu'],
                monthNamesShort: ['Tammi', 'Helmi', 'Maalis', 'Huhti', 'Touko', 'Kesä', 'Heinä', 'Elo', 'Syys', 'Loka', 'Marras', 'Joulu'],
                dayNames: [, 'Maanantai', 'Tiistai', 'Keskiviikko', 'Torstai', 'Perjantai', 'Lauantai'],
                dayNamesShort: ['Su', 'Ma', 'Ti', 'Ke', 'To', 'Pe', 'La'],
                buttonText: {
                    today: 'tämä päivä',
                    month: 'kuukausi',
                    week: 'viikko',
                    day: 'päivä',
                    agenda: 'tuntinäkymä'
                },

                weekNumberCalculation: 'ISO',
                firstDay: 1, // Viikko alkaa maanantaista
                height: 500,
                eventLimit: true,
                eventColor: '#378006',
                events: events,

                // Jos tapahtumaa klikataan kalenterissa:         >Tämä ei toimi meillä
                eventClick: function (calEvent, jsEvent, view) {
                    selectedEvent = calEvent;
                    $('#myModalDisplayEvent #eventTitle').text(calEvent.title);
                    var $description = $('<div/>');
                    // Tapahtuman tiedot sijoitetaan jQuery settereillä html:ään modaalin sisällä.
                    $description.append($('<p/>').html('<b>Alkaa: </b>' + calEvent.start.format("DD-MMM-YYYY HH:mm")));

                    // Jos lopetusaika on määritty
                    if (calEvent.end != null) {
                        $description.append($('<p/>').html('<b>Päättyy: </b>' + calEvent.end.format("DD-MMM-YYYY HH:mm")));
                    }

                    // itse eventin id
                    if (calEvent.EVENT_ID != null) {
                        $description.append($('<p/>').html('<b>EventID: </b>' + calEvent.EVENT_ID));  /*Tässä pitäisi saada eventid esiin*/
                    }

                    $description.append($('<p/>').html('<b>Kuvaus: </b>' + calEvent.description));
                    $('#myModalDisplayEvent #pDetails').empty().html($description);

                    $('#myModalDisplayEvent').modal();
                },
                selectable: true,
                select: function (start, end) {
                    selectedEvent = {
                        eventID: 0,
                        title: '',
                        description: '',
                        start: start,
                        end: end,
                        allDay: false,
                        color: ''
                    };
                    openAddEditForm();
                    $('#calendar').fullCalendar('unselect');
                },
                editable: true,
                eventDrop: function (event) {
                    var data = {
                        EventID: event.eventID,
                        Subject: event.title,
                        Start: event.start.format('DD/MM/YYYY HH:mm A'),
                        End: event.end != null ? event.end.format('DD/MM/YYYY HH:mm A') : null,
                        Description: event.description,
                        ThemeColor: event.color,
                        IsFullDay: event.allDay
                    };
                    SaveEvent(data);
                }
            })
        }

        $('#btnEdit').click(function () {
            //Open modal dialog for edit event
            openAddEditForm();
        })
        $('#btnDelete').click(function () {
            if (selectedEvent != null && confirm('Poistetaanko kalenterimerkintä: ' + selectedEvent.EVENT_ID +'?')) {
                //Pari seuraavaa koodiriviä vain debuggausta varten (tutkitaan miten saadaan tapahtuman EVENT_ID esiin)
                let eventti = selectedEvent.EVENT_ID;
                alert("Poistan kalenterimerkinnän: " + eventti + '...');
                $.ajax({
                    type: "POST",
                    url: '/Event/DeleteEvent/?id=' + selectedEvent.EVENT_ID,
                    data: { 'eventID': selectedEvent.EVENT_ID },
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calender
                            FetchEventAndRenderCalendar();
                            $('#myModalDisplayEvent').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Failed');
                    }
                })
            }
        })
        $('#dtp1,#dtp2').datetimepicker({
            format: 'DD/MM/YYYY HH:mm A'
        });
        $('#chkIsFullDay').change(function () {
            if ($(this).is(':checked')) {
                $('#divEndDate').hide();
            }
            else {
                $('#divEndDate').show();
            }
        });
        function openAddEditForm() {
            if (selectedEvent != null) {
                $('#hdEventID').val(selectedEvent.eventID);
                $('#txtSubject').val(selectedEvent.title);
                $('#txtStart').val(selectedEvent.start.format('DD/MM/YYYY HH:mm A'));
                $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                $('#chkIsFullDay').change();
                $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');
                $('#txtDescription').val(selectedEvent.description);
                $('#ddThemeColor').val(selectedEvent.color);
            }
            $('#myModalDisplayEvent').modal('hide');
            $('#myModalSaveEvent').modal();
        }
        $('#btnSave').click(function () {
            //Tarkistuksia
            if ($('#txtSubject').val().trim() == "") {
                alert('Kalenterimerkinnän aihe on pakollinen tieto');
                return;
            }
            if ($('#txtStart').val().trim() == "") {
                alert('Alkupäivämäärä/-aika on pakollinen tieto');
                return;
            }
            if ($('#chkIsFullDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                alert('Loppupäivämäärä/-aika on pakollinen tieto');
                return;
            }
            else {
                var startDate = moment($('#txtStart').val(), "DD/MM/YYYY HH:mm A").toDate();
                var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                if (startDate > endDate) {
                    alert('Loppupäivämäärän pitää olla myöhäisempi kuin alkupäivämäärä!');
                    return;
                }
            }

            var data = {
                EventID: $('#hdEventID').val(),
                Subject: $('#txtSubject').val().trim(),
                Start: $('#txtStart').val().trim(),
                End: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                Description: $('#txtDescription').val(),
                ThemeColor: $('#ddThemeColor').val(),
                IsFullDay: $('#chkIsFullDay').is(':checked')
            }
            SaveEvent(data);  //Funktiokutsu tietojen lähettämiseksi palvelimelle/kontrollerille

        })
        //Funktio, joka vie uudet taikka päivitetyt tiedot palvelimelle/kontrollerille
        function SaveEvent(data) {
            //Pari seuraavaa koodiriviä vain debuggausta varten (otetaan tapahtuman EVENT_ID esiin)
            let eventti = selectedEvent.EVENT_ID;
            alert("Muokkaan kalenterimerkintää: " + eventti + '...');
            data.EventID = selectedEvent.EVENT_ID; //Strateginen sijoitus: Kontrollerille lähetettävän objektin avaintiedon pitää olla oikein ja siksi EVENT:ID sijoitetaan nyt
            //Kalenterimerkinnän (event) tiedot viedään kontrollerille data-objektissa.
            //Kontrolleri tietää EVENT_ID: n arvon (0 taikka joku muu) perusteella onko kyseessä uusi vaiko vanha merkintä
            $.ajax({
                type: "POST",
                url: '/Event/SaveEvent',
                data: data,
                success: function (data) {
                    if (data.status) {
                        //Refresh the calender
                        FetchEventAndRenderCalendar();
                        $('#myModalSaveEvent').modal('hide');
                    }
                },
                error: function () {
                    alert('Error happened.');
                }
            })
        }
    })</script>

	}

	<div>
		<a class="btn btn-outline-dark" href="/Home/IndexTyontekija">Takaisin etusivulle</a>
	</div>
